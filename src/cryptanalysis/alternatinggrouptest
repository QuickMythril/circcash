// Here we running tests to prove that the round functions for Hashspin generate the alternating group. We start by showing that the group generated by the round permutations
// for hashspin is transitive. We then use theorems from group theory to conclude that the group is actually alternating.

// Example program
#include <iostream>
#include <string>


unsigned int hashspincc(unsigned int x){return (x<<17)>>17;}

unsigned int hashspindd(unsigned int x){return x>>15;}

unsigned int hashspinrecombine(unsigned int cc,unsigned int dd){
return cc+(dd<<15);
}

int main()
{

unsigned int cc,dd,ccc,ddd,lar,point,ii;

for (ii=0;ii<=4294967295;ii++){

cc=hashspincc(ii);
dd=hashspindd(ii);

while(true) {
lar=rand()%4;
if (lar>1){lar^=18;}
cc=((cc<<8)|(cc>>7))&32767;
dd=((dd<<8)|(dd>>9))&131071;
ccc=cc<<24;
ddd=dd<<24;
cc^=(ccc>>23)^((ccc>>21)&(ddd>>21));
dd^=(ddd>>21)^(ccc>>23);
cc^=lar<<2;
point=(point>>2);

if ((cc==0) & (dd>0)){
break;
}

if (hashspinrecombine(cc,dd)<ii){break;}

   }


}



std::cout <<"yay"<< "!\n";


}
